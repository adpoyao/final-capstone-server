var cov_fn90n9op2=function(){var path='/Users/quangnguyen/Git-projects/final-capstone/final-capstone-server/index.js',hash='fffb3d68e1378b17872d6fa7f09c2bc9d89b9f26',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/Users/quangnguyen/Git-projects/final-capstone/final-capstone-server/index.js',statementMap:{'0':{start:{line:2,column:16},end:{line:2,column:34}},'1':{start:{line:3,column:13},end:{line:3,column:28}},'2':{start:{line:4,column:17},end:{line:4,column:36}},'3':{start:{line:5,column:15},end:{line:5,column:32}},'4':{start:{line:6,column:17},end:{line:6,column:36}},'5':{start:{line:15,column:32},end:{line:15,column:50}},'6':{start:{line:16,column:59},end:{line:16,column:76}},'7':{start:{line:18,column:0},end:{line:18,column:34}},'8':{start:{line:20,column:46},end:{line:20,column:65}},'9':{start:{line:22,column:12},end:{line:22,column:21}},'10':{start:{line:24,column:0},end:{line:24,column:26}},'11':{start:{line:26,column:0},end:{line:28,column:4}},'12':{start:{line:30,column:0},end:{line:30,column:28}},'13':{start:{line:31,column:0},end:{line:31,column:26}},'14':{start:{line:33,column:0},end:{line:33,column:36}},'15':{start:{line:34,column:0},end:{line:34,column:34}},'16':{start:{line:37,column:16},end:{line:37,column:64}},'17':{start:{line:39,column:0},end:{line:41,column:3}},'18':{start:{line:40,column:2},end:{line:40,column:20}},'19':{start:{line:45,column:0},end:{line:47,column:3}},'20':{start:{line:46,column:2},end:{line:46,column:56}},'21':{start:{line:53,column:2},end:{line:69,column:5}},'22':{start:{line:54,column:4},end:{line:68,column:7}},'23':{start:{line:55,column:6},end:{line:55,column:32}},'24':{start:{line:56,column:6},end:{line:58,column:7}},'25':{start:{line:57,column:8},end:{line:57,column:27}},'26':{start:{line:59,column:6},end:{line:67,column:11}},'27':{start:{line:61,column:10},end:{line:61,column:63}},'28':{start:{line:62,column:10},end:{line:62,column:20}},'29':{start:{line:65,column:10},end:{line:65,column:32}},'30':{start:{line:66,column:10},end:{line:66,column:22}},'31':{start:{line:73,column:2},end:{line:83,column:5}},'32':{start:{line:74,column:4},end:{line:82,column:7}},'33':{start:{line:75,column:6},end:{line:75,column:36}},'34':{start:{line:76,column:6},end:{line:81,column:9}},'35':{start:{line:77,column:8},end:{line:79,column:9}},'36':{start:{line:78,column:10},end:{line:78,column:29}},'37':{start:{line:80,column:8},end:{line:80,column:18}},'38':{start:{line:86,column:0},end:{line:88,column:1}},'39':{start:{line:87,column:2},end:{line:87,column:47}},'40':{start:{line:87,column:27},end:{line:87,column:45}},'41':{start:{line:90,column:0},end:{line:90,column:49}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:39,column:17},end:{line:39,column:18}},loc:{start:{line:39,column:30},end:{line:41,column:1}},line:39},'1':{name:'(anonymous_1)',decl:{start:{line:45,column:13},end:{line:45,column:14}},loc:{start:{line:45,column:27},end:{line:47,column:1}},line:45},'2':{name:'runServer',decl:{start:{line:52,column:9},end:{line:52,column:18}},loc:{start:{line:52,column:21},end:{line:70,column:1}},line:52},'3':{name:'(anonymous_3)',decl:{start:{line:53,column:21},end:{line:53,column:22}},loc:{start:{line:53,column:42},end:{line:69,column:3}},line:53},'4':{name:'(anonymous_4)',decl:{start:{line:54,column:61},end:{line:54,column:62}},loc:{start:{line:54,column:68},end:{line:68,column:5}},line:54},'5':{name:'(anonymous_5)',decl:{start:{line:60,column:22},end:{line:60,column:23}},loc:{start:{line:60,column:28},end:{line:63,column:9}},line:60},'6':{name:'(anonymous_6)',decl:{start:{line:64,column:21},end:{line:64,column:22}},loc:{start:{line:64,column:28},end:{line:67,column:9}},line:64},'7':{name:'closeServer',decl:{start:{line:72,column:9},end:{line:72,column:20}},loc:{start:{line:72,column:23},end:{line:84,column:1}},line:72},'8':{name:'(anonymous_8)',decl:{start:{line:73,column:36},end:{line:73,column:37}},loc:{start:{line:73,column:42},end:{line:83,column:3}},line:73},'9':{name:'(anonymous_9)',decl:{start:{line:74,column:23},end:{line:74,column:24}},loc:{start:{line:74,column:44},end:{line:82,column:5}},line:74},'10':{name:'(anonymous_10)',decl:{start:{line:76,column:19},end:{line:76,column:20}},loc:{start:{line:76,column:26},end:{line:81,column:7}},line:76},'11':{name:'(anonymous_11)',decl:{start:{line:87,column:20},end:{line:87,column:21}},loc:{start:{line:87,column:27},end:{line:87,column:45}},line:87}},branchMap:{'0':{loc:{start:{line:56,column:6},end:{line:58,column:7}},type:'if',locations:[{start:{line:56,column:6},end:{line:58,column:7}},{start:{line:56,column:6},end:{line:58,column:7}}],line:56},'1':{loc:{start:{line:77,column:8},end:{line:79,column:9}},type:'if',locations:[{start:{line:77,column:8},end:{line:79,column:9}},{start:{line:77,column:8},end:{line:79,column:9}}],line:77},'2':{loc:{start:{line:86,column:0},end:{line:88,column:1}},type:'if',locations:[{start:{line:86,column:0},end:{line:88,column:1}},{start:{line:86,column:0},end:{line:88,column:1}}],line:86}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0,'25':0,'26':0,'27':0,'28':0,'29':0,'30':0,'31':0,'32':0,'33':0,'34':0,'35':0,'36':0,'37':0,'38':0,'39':0,'40':0,'41':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0},b:{'0':[0,0],'1':[0,0],'2':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const express=(cov_fn90n9op2.s[0]++,require('express'));const cors=(cov_fn90n9op2.s[1]++,require('cors'));const mongoose=(cov_fn90n9op2.s[2]++,require('mongoose'));const morgan=(cov_fn90n9op2.s[3]++,require('morgan'));const passport=(cov_fn90n9op2.s[4]++,require('passport'));// Here we use destructuring assignment with renaming so the two variables
// called router (from ./users and ./auth) have different names
// For example:
// const actorSurnames = { james: "Stewart", robert: "De Niro" };
// const { james: jimmy, robert: bobby } = actorSurnames;
// console.log(jimmy); // Stewart - the variable name is jimmy, not james
// console.log(bobby); // De Niro - the variable name is bobby, not robert
const{router:usersRouter}=(cov_fn90n9op2.s[5]++,require('./users'));const{router:authRouter,localStrategy,jwtStrategy}=(cov_fn90n9op2.s[6]++,require('./auth'));cov_fn90n9op2.s[7]++;mongoose.Promise=global.Promise;const{PORT,DATABASE_URL,CLIENT_ORIGIN}=(cov_fn90n9op2.s[8]++,require('./config'));const app=(cov_fn90n9op2.s[9]++,express());cov_fn90n9op2.s[10]++;app.use(morgan('common'));cov_fn90n9op2.s[11]++;app.use(cors({origin:CLIENT_ORIGIN}));cov_fn90n9op2.s[12]++;passport.use(localStrategy);cov_fn90n9op2.s[13]++;passport.use(jwtStrategy);cov_fn90n9op2.s[14]++;app.use('/api/users/',usersRouter);cov_fn90n9op2.s[15]++;app.use('/api/auth/',authRouter);const jwtAuth=(cov_fn90n9op2.s[16]++,passport.authenticate('jwt',{session:false}));cov_fn90n9op2.s[17]++;app.get('/test',(req,res)=>{cov_fn90n9op2.f[0]++;cov_fn90n9op2.s[18]++;res.send('Hello');});cov_fn90n9op2.s[19]++;app.use('*',(req,res)=>{cov_fn90n9op2.f[1]++;cov_fn90n9op2.s[20]++;return res.status(404).json({message:'Not Found'});});let server;function runServer(){cov_fn90n9op2.f[2]++;cov_fn90n9op2.s[21]++;return new Promise((resolve,reject)=>{cov_fn90n9op2.f[3]++;cov_fn90n9op2.s[22]++;mongoose.connect(DATABASE_URL,{useMongoClient:true},err=>{cov_fn90n9op2.f[4]++;cov_fn90n9op2.s[23]++;console.log(DATABASE_URL);cov_fn90n9op2.s[24]++;if(err){cov_fn90n9op2.b[0][0]++;cov_fn90n9op2.s[25]++;return reject(err);}else{cov_fn90n9op2.b[0][1]++;}cov_fn90n9op2.s[26]++;server=app.listen(PORT,()=>{cov_fn90n9op2.f[5]++;cov_fn90n9op2.s[27]++;console.log(`Your app is listening on port ${PORT}`);cov_fn90n9op2.s[28]++;resolve();}).on('error',err=>{cov_fn90n9op2.f[6]++;cov_fn90n9op2.s[29]++;mongoose.disconnect();cov_fn90n9op2.s[30]++;reject(err);});});});}function closeServer(){cov_fn90n9op2.f[7]++;cov_fn90n9op2.s[31]++;return mongoose.disconnect().then(()=>{cov_fn90n9op2.f[8]++;cov_fn90n9op2.s[32]++;return new Promise((resolve,reject)=>{cov_fn90n9op2.f[9]++;cov_fn90n9op2.s[33]++;console.log('Closing server');cov_fn90n9op2.s[34]++;server.close(err=>{cov_fn90n9op2.f[10]++;cov_fn90n9op2.s[35]++;if(err){cov_fn90n9op2.b[1][0]++;cov_fn90n9op2.s[36]++;return reject(err);}else{cov_fn90n9op2.b[1][1]++;}cov_fn90n9op2.s[37]++;resolve();});});});}cov_fn90n9op2.s[38]++;if(require.main===module){cov_fn90n9op2.b[2][0]++;cov_fn90n9op2.s[39]++;runServer().catch(err=>{cov_fn90n9op2.f[11]++;cov_fn90n9op2.s[40]++;return console.error(err);});}else{cov_fn90n9op2.b[2][1]++;}cov_fn90n9op2.s[41]++;module.exports={app,runServer,closeServer};