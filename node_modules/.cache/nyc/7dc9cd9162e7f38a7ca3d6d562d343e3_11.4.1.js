var cov_2m8hprqgny=function(){var path='/home/adam/Documents/Thinkful/Final Capstone/finalCap/final-capstone-server/class/router.js',hash='5e6c17ab9a7426d17ec1cbbf0c92a526b50441f5',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/home/adam/Documents/Thinkful/Final Capstone/finalCap/final-capstone-server/class/router.js',statementMap:{'0':{start:{line:1,column:16},end:{line:1,column:34}},'1':{start:{line:2,column:19},end:{line:2,column:41}},'2':{start:{line:4,column:15},end:{line:4,column:31}},'3':{start:{line:5,column:19},end:{line:5,column:36}},'4':{start:{line:7,column:0},end:{line:9,column:5}},'5':{start:{line:8,column:4},end:{line:8,column:40}},'6':{start:{line:11,column:0},end:{line:23,column:3}},'7':{start:{line:12,column:27},end:{line:12,column:46}},'8':{start:{line:13,column:4},end:{line:20,column:5}},'9':{start:{line:14,column:22},end:{line:14,column:39}},'10':{start:{line:15,column:8},end:{line:19,column:9}},'11':{start:{line:16,column:24},end:{line:16,column:62}},'12':{start:{line:17,column:8},end:{line:17,column:31}},'13':{start:{line:18,column:8},end:{line:18,column:45}},'14':{start:{line:21,column:17},end:{line:21,column:69}},'15':{start:{line:22,column:4},end:{line:22,column:31}},'16':{start:{line:31,column:0},end:{line:31,column:24}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:7,column:16},end:{line:7,column:17}},loc:{start:{line:7,column:30},end:{line:9,column:3}},line:7},'1':{name:'(anonymous_1)',decl:{start:{line:11,column:29},end:{line:11,column:30}},loc:{start:{line:11,column:43},end:{line:23,column:1}},line:11}},branchMap:{'0':{loc:{start:{line:15,column:8},end:{line:19,column:9}},type:'if',locations:[{start:{line:15,column:8},end:{line:19,column:9}},{start:{line:15,column:8},end:{line:19,column:9}}],line:15}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0},f:{'0':0,'1':0},b:{'0':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const express=(cov_2m8hprqgny.s[0]++,require('express'));const bodyParser=(cov_2m8hprqgny.s[1]++,require('body-parser'));const router=(cov_2m8hprqgny.s[2]++,express.Router());const jsonParser=(cov_2m8hprqgny.s[3]++,bodyParser.json());cov_2m8hprqgny.s[4]++;router.get('/',(req,res)=>{cov_2m8hprqgny.f[0]++;cov_2m8hprqgny.s[5]++;res.json([{'classname':'BIO103'}]);});cov_2m8hprqgny.s[6]++;router.post('/',jsonParser,(req,res)=>{cov_2m8hprqgny.f[1]++;const requiredFields=(cov_2m8hprqgny.s[7]++,['name','checked']);cov_2m8hprqgny.s[8]++;for(let i=0;i<requiredFields.length;i++){const field=(cov_2m8hprqgny.s[9]++,requiredFields[i]);cov_2m8hprqgny.s[10]++;if(!(field in req.body)){cov_2m8hprqgny.b[0][0]++;const message=(cov_2m8hprqgny.s[11]++,`Missing \`${field}\` in request body`);cov_2m8hprqgny.s[12]++;console.error(message);cov_2m8hprqgny.s[13]++;return res.status(400).send(message);}else{cov_2m8hprqgny.b[0][1]++;}}const item=(cov_2m8hprqgny.s[14]++,ShoppingList.create(req.body.name,req.body.checked));cov_2m8hprqgny.s[15]++;res.status(201).json(item);});// router.delete('/:id', (req, res) => {
//     ShoppingList.delete(req.params.id);
//     console.log(`Deleted shopping list item \`${req.params.id}\``);
//     res.status(204).end();
//   });
cov_2m8hprqgny.s[16]++;module.exports=router;