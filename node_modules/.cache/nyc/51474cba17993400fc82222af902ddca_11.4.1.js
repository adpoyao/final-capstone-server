'use strict';var cov_2j1zqtvjcx=function(){var path='/Users/quangnguyen/Git-projects/final-capstone/final-capstone-server/users/router.js',hash='fc457fe8ed855126f95611b28d7ad407bd1c6326',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/Users/quangnguyen/Git-projects/final-capstone/final-capstone-server/users/router.js',statementMap:{'0':{start:{line:2,column:16},end:{line:2,column:34}},'1':{start:{line:3,column:19},end:{line:3,column:41}},'2':{start:{line:5,column:15},end:{line:5,column:34}},'3':{start:{line:7,column:15},end:{line:7,column:31}},'4':{start:{line:9,column:19},end:{line:9,column:36}},'5':{start:{line:12,column:0},end:{line:142,column:3}},'6':{start:{line:13,column:25},end:{line:13,column:49}},'7':{start:{line:14,column:23},end:{line:14,column:73}},'8':{start:{line:14,column:52},end:{line:14,column:72}},'9':{start:{line:16,column:2},end:{line:23,column:3}},'10':{start:{line:17,column:4},end:{line:22,column:7}},'11':{start:{line:25,column:23},end:{line:25,column:72}},'12':{start:{line:26,column:25},end:{line:28,column:3}},'13':{start:{line:27,column:13},end:{line:27,column:69}},'14':{start:{line:30,column:2},end:{line:37,column:3}},'15':{start:{line:31,column:4},end:{line:36,column:7}},'16':{start:{line:46,column:33},end:{line:46,column:57}},'17':{start:{line:47,column:26},end:{line:49,column:3}},'18':{start:{line:48,column:13},end:{line:48,column:55}},'19':{start:{line:51,column:2},end:{line:58,column:3}},'20':{start:{line:52,column:4},end:{line:57,column:7}},'21':{start:{line:62,column:22},end:{line:72,column:3}},'22':{start:{line:73,column:24},end:{line:77,column:3}},'23':{start:{line:75,column:6},end:{line:76,column:66}},'24':{start:{line:78,column:24},end:{line:82,column:3}},'25':{start:{line:80,column:6},end:{line:81,column:66}},'26':{start:{line:84,column:2},end:{line:95,column:3}},'27':{start:{line:85,column:4},end:{line:94,column:7}},'28':{start:{line:97,column:60},end:{line:97,column:68}},'29':{start:{line:100,column:2},end:{line:100,column:31}},'30':{start:{line:101,column:2},end:{line:101,column:29}},'31':{start:{line:102,column:2},end:{line:102,column:21}},'32':{start:{line:103,column:2},end:{line:141,column:7}},'33':{start:{line:106,column:6},end:{line:106,column:30}},'34':{start:{line:107,column:6},end:{line:115,column:7}},'35':{start:{line:109,column:8},end:{line:114,column:11}},'36':{start:{line:117,column:6},end:{line:117,column:41}},'37':{start:{line:120,column:6},end:{line:120,column:30}},'38':{start:{line:121,column:6},end:{line:126,column:9}},'39':{start:{line:129,column:6},end:{line:129,column:30}},'40':{start:{line:130,column:6},end:{line:130,column:50}},'41':{start:{line:136,column:6},end:{line:138,column:7}},'42':{start:{line:137,column:8},end:{line:137,column:46}},'43':{start:{line:139,column:6},end:{line:139,column:24}},'44':{start:{line:140,column:6},end:{line:140,column:74}},'45':{start:{line:154,column:0},end:{line:158,column:3}},'46':{start:{line:155,column:2},end:{line:157,column:76}},'47':{start:{line:156,column:19},end:{line:156,column:62}},'48':{start:{line:156,column:46},end:{line:156,column:60}},'49':{start:{line:157,column:18},end:{line:157,column:74}},'50':{start:{line:160,column:0},end:{line:160,column:26}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:12,column:29},end:{line:12,column:30}},loc:{start:{line:12,column:43},end:{line:142,column:1}},line:12},'1':{name:'(anonymous_1)',decl:{start:{line:14,column:43},end:{line:14,column:44}},loc:{start:{line:14,column:52},end:{line:14,column:72}},line:14},'2':{name:'(anonymous_2)',decl:{start:{line:27,column:4},end:{line:27,column:5}},loc:{start:{line:27,column:13},end:{line:27,column:69}},line:27},'3':{name:'(anonymous_3)',decl:{start:{line:48,column:4},end:{line:48,column:5}},loc:{start:{line:48,column:13},end:{line:48,column:55}},line:48},'4':{name:'(anonymous_4)',decl:{start:{line:74,column:4},end:{line:74,column:5}},loc:{start:{line:75,column:6},end:{line:76,column:66}},line:75},'5':{name:'(anonymous_5)',decl:{start:{line:79,column:4},end:{line:79,column:5}},loc:{start:{line:80,column:6},end:{line:81,column:66}},line:80},'6':{name:'(anonymous_6)',decl:{start:{line:105,column:10},end:{line:105,column:11}},loc:{start:{line:105,column:19},end:{line:118,column:5}},line:105},'7':{name:'(anonymous_7)',decl:{start:{line:119,column:10},end:{line:119,column:11}},loc:{start:{line:119,column:18},end:{line:127,column:5}},line:119},'8':{name:'(anonymous_8)',decl:{start:{line:128,column:10},end:{line:128,column:11}},loc:{start:{line:128,column:18},end:{line:131,column:5}},line:128},'9':{name:'(anonymous_9)',decl:{start:{line:132,column:11},end:{line:132,column:12}},loc:{start:{line:132,column:18},end:{line:141,column:5}},line:132},'10':{name:'(anonymous_10)',decl:{start:{line:154,column:16},end:{line:154,column:17}},loc:{start:{line:154,column:30},end:{line:158,column:1}},line:154},'11':{name:'(anonymous_11)',decl:{start:{line:156,column:10},end:{line:156,column:11}},loc:{start:{line:156,column:19},end:{line:156,column:62}},line:156},'12':{name:'(anonymous_12)',decl:{start:{line:156,column:38},end:{line:156,column:39}},loc:{start:{line:156,column:46},end:{line:156,column:60}},line:156},'13':{name:'(anonymous_13)',decl:{start:{line:157,column:11},end:{line:157,column:12}},loc:{start:{line:157,column:18},end:{line:157,column:74}},line:157}},branchMap:{'0':{loc:{start:{line:16,column:2},end:{line:23,column:3}},type:'if',locations:[{start:{line:16,column:2},end:{line:23,column:3}},{start:{line:16,column:2},end:{line:23,column:3}}],line:16},'1':{loc:{start:{line:27,column:13},end:{line:27,column:69}},type:'binary-expr',locations:[{start:{line:27,column:13},end:{line:27,column:30}},{start:{line:27,column:34},end:{line:27,column:69}}],line:27},'2':{loc:{start:{line:30,column:2},end:{line:37,column:3}},type:'if',locations:[{start:{line:30,column:2},end:{line:37,column:3}},{start:{line:30,column:2},end:{line:37,column:3}}],line:30},'3':{loc:{start:{line:51,column:2},end:{line:58,column:3}},type:'if',locations:[{start:{line:51,column:2},end:{line:58,column:3}},{start:{line:51,column:2},end:{line:58,column:3}}],line:51},'4':{loc:{start:{line:75,column:6},end:{line:76,column:66}},type:'binary-expr',locations:[{start:{line:75,column:6},end:{line:75,column:33}},{start:{line:76,column:12},end:{line:76,column:66}}],line:75},'5':{loc:{start:{line:80,column:6},end:{line:81,column:66}},type:'binary-expr',locations:[{start:{line:80,column:6},end:{line:80,column:33}},{start:{line:81,column:12},end:{line:81,column:66}}],line:80},'6':{loc:{start:{line:84,column:2},end:{line:95,column:3}},type:'if',locations:[{start:{line:84,column:2},end:{line:95,column:3}},{start:{line:84,column:2},end:{line:95,column:3}}],line:84},'7':{loc:{start:{line:84,column:6},end:{line:84,column:36}},type:'binary-expr',locations:[{start:{line:84,column:6},end:{line:84,column:19}},{start:{line:84,column:23},end:{line:84,column:36}}],line:84},'8':{loc:{start:{line:88,column:15},end:{line:92,column:32}},type:'cond-expr',locations:[{start:{line:89,column:10},end:{line:90,column:32}},{start:{line:91,column:10},end:{line:92,column:32}}],line:88},'9':{loc:{start:{line:93,column:16},end:{line:93,column:46}},type:'binary-expr',locations:[{start:{line:93,column:16},end:{line:93,column:29}},{start:{line:93,column:33},end:{line:93,column:46}}],line:93},'10':{loc:{start:{line:97,column:27},end:{line:97,column:41}},type:'default-arg',locations:[{start:{line:97,column:39},end:{line:97,column:41}}],line:97},'11':{loc:{start:{line:97,column:43},end:{line:97,column:56}},type:'default-arg',locations:[{start:{line:97,column:54},end:{line:97,column:56}}],line:97},'12':{loc:{start:{line:107,column:6},end:{line:115,column:7}},type:'if',locations:[{start:{line:107,column:6},end:{line:115,column:7}},{start:{line:107,column:6},end:{line:115,column:7}}],line:107},'13':{loc:{start:{line:136,column:6},end:{line:138,column:7}},type:'if',locations:[{start:{line:136,column:6},end:{line:138,column:7}},{start:{line:136,column:6},end:{line:138,column:7}}],line:136}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0,'25':0,'26':0,'27':0,'28':0,'29':0,'30':0,'31':0,'32':0,'33':0,'34':0,'35':0,'36':0,'37':0,'38':0,'39':0,'40':0,'41':0,'42':0,'43':0,'44':0,'45':0,'46':0,'47':0,'48':0,'49':0,'50':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0},b:{'0':[0,0],'1':[0,0],'2':[0,0],'3':[0,0],'4':[0,0],'5':[0,0],'6':[0,0],'7':[0,0],'8':[0,0],'9':[0,0],'10':[0],'11':[0],'12':[0,0],'13':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const express=(cov_2j1zqtvjcx.s[0]++,require('express'));const bodyParser=(cov_2j1zqtvjcx.s[1]++,require('body-parser'));const{User}=(cov_2j1zqtvjcx.s[2]++,require('./models'));const router=(cov_2j1zqtvjcx.s[3]++,express.Router());const jsonParser=(cov_2j1zqtvjcx.s[4]++,bodyParser.json());// Post to register a new user
cov_2j1zqtvjcx.s[5]++;router.post('/',jsonParser,(req,res)=>{cov_2j1zqtvjcx.f[0]++;const requiredFields=(cov_2j1zqtvjcx.s[6]++,['username','password']);const missingField=(cov_2j1zqtvjcx.s[7]++,requiredFields.find(field=>{cov_2j1zqtvjcx.f[1]++;cov_2j1zqtvjcx.s[8]++;return!(field in req.body);}));cov_2j1zqtvjcx.s[9]++;if(missingField){cov_2j1zqtvjcx.b[0][0]++;cov_2j1zqtvjcx.s[10]++;return res.status(422).json({code:422,reason:'ValidationError',message:'Missing field',location:missingField});}else{cov_2j1zqtvjcx.b[0][1]++;}const stringFields=(cov_2j1zqtvjcx.s[11]++,['username','password','firstName','lastName']);const nonStringField=(cov_2j1zqtvjcx.s[12]++,stringFields.find(field=>{cov_2j1zqtvjcx.f[2]++;cov_2j1zqtvjcx.s[13]++;return(cov_2j1zqtvjcx.b[1][0]++,field in req.body)&&(cov_2j1zqtvjcx.b[1][1]++,typeof req.body[field]!=='string');}));cov_2j1zqtvjcx.s[14]++;if(nonStringField){cov_2j1zqtvjcx.b[2][0]++;cov_2j1zqtvjcx.s[15]++;return res.status(422).json({code:422,reason:'ValidationError',message:'Incorrect field type: expected string',location:nonStringField});}else{cov_2j1zqtvjcx.b[2][1]++;}// If the username and password aren't trimmed we give an error.  Users might
// expect that these will work without trimming (i.e. they want the password
// "foobar ", including the space at the end).  We need to reject such values
// explicitly so the users know what's happening, rather than silently
// trimming them and expecting the user to understand.
// We'll silently trim the other fields, because they aren't credentials used
// to log in, so it's less of a problem.
const explicityTrimmedFields=(cov_2j1zqtvjcx.s[16]++,['username','password']);const nonTrimmedField=(cov_2j1zqtvjcx.s[17]++,explicityTrimmedFields.find(field=>{cov_2j1zqtvjcx.f[3]++;cov_2j1zqtvjcx.s[18]++;return req.body[field].trim()!==req.body[field];}));cov_2j1zqtvjcx.s[19]++;if(nonTrimmedField){cov_2j1zqtvjcx.b[3][0]++;cov_2j1zqtvjcx.s[20]++;return res.status(422).json({code:422,reason:'ValidationError',message:'Cannot start or end with whitespace',location:nonTrimmedField});}else{cov_2j1zqtvjcx.b[3][1]++;}const sizedFields=(cov_2j1zqtvjcx.s[21]++,{username:{min:1},password:{min:3,// bcrypt truncates after 72 characters, so let's not give the illusion
// of security by storing extra (unused) info
max:72}});const tooSmallField=(cov_2j1zqtvjcx.s[22]++,Object.keys(sizedFields).find(field=>{cov_2j1zqtvjcx.f[4]++;cov_2j1zqtvjcx.s[23]++;return(cov_2j1zqtvjcx.b[4][0]++,'min'in sizedFields[field])&&(cov_2j1zqtvjcx.b[4][1]++,req.body[field].trim().length<sizedFields[field].min);}));const tooLargeField=(cov_2j1zqtvjcx.s[24]++,Object.keys(sizedFields).find(field=>{cov_2j1zqtvjcx.f[5]++;cov_2j1zqtvjcx.s[25]++;return(cov_2j1zqtvjcx.b[5][0]++,'max'in sizedFields[field])&&(cov_2j1zqtvjcx.b[5][1]++,req.body[field].trim().length>sizedFields[field].max);}));cov_2j1zqtvjcx.s[26]++;if((cov_2j1zqtvjcx.b[7][0]++,tooSmallField)||(cov_2j1zqtvjcx.b[7][1]++,tooLargeField)){cov_2j1zqtvjcx.b[6][0]++;cov_2j1zqtvjcx.s[27]++;return res.status(422).json({code:422,reason:'ValidationError',message:tooSmallField?(cov_2j1zqtvjcx.b[8][0]++,`Must be at least ${sizedFields[tooSmallField].min} characters long`):(cov_2j1zqtvjcx.b[8][1]++,`Must be at most ${sizedFields[tooLargeField].max} characters long`),location:(cov_2j1zqtvjcx.b[9][0]++,tooSmallField)||(cov_2j1zqtvjcx.b[9][1]++,tooLargeField)});}else{cov_2j1zqtvjcx.b[6][1]++;}let{username,password,firstName=(cov_2j1zqtvjcx.b[10][0]++,''),lastName=(cov_2j1zqtvjcx.b[11][0]++,'')}=(cov_2j1zqtvjcx.s[28]++,req.body);// Username and password come in pre-trimmed, otherwise we throw an error
// before this
cov_2j1zqtvjcx.s[29]++;firstName=firstName.trim();cov_2j1zqtvjcx.s[30]++;lastName=lastName.trim();cov_2j1zqtvjcx.s[31]++;console.log('test');cov_2j1zqtvjcx.s[32]++;return User.find({username}).count().then(count=>{cov_2j1zqtvjcx.f[6]++;cov_2j1zqtvjcx.s[33]++;console.log('line 106');cov_2j1zqtvjcx.s[34]++;if(count>0){cov_2j1zqtvjcx.b[12][0]++;cov_2j1zqtvjcx.s[35]++;// There is an existing user with the same username
return Promise.reject({code:422,reason:'ValidationError',message:'Username already taken',location:'username'});}else{cov_2j1zqtvjcx.b[12][1]++;}// If there is no existing user, hash the password
cov_2j1zqtvjcx.s[36]++;return User.hashPassword(password);}).then(hash=>{cov_2j1zqtvjcx.f[7]++;cov_2j1zqtvjcx.s[37]++;console.log('line 120');cov_2j1zqtvjcx.s[38]++;return User.create({username,password:hash,firstName,lastName});}).then(user=>{cov_2j1zqtvjcx.f[8]++;cov_2j1zqtvjcx.s[39]++;console.log('line 129');cov_2j1zqtvjcx.s[40]++;return res.status(201).json(user.apiRepr());}).catch(err=>{cov_2j1zqtvjcx.f[9]++;cov_2j1zqtvjcx.s[41]++;// Forward validation errors on to the client, otherwise give a 500
// error because something unexpected has happened
if(err.reason==='ValidationError'){cov_2j1zqtvjcx.b[13][0]++;cov_2j1zqtvjcx.s[42]++;return res.status(err.code).json(err);}else{cov_2j1zqtvjcx.b[13][1]++;}cov_2j1zqtvjcx.s[43]++;console.error(err);cov_2j1zqtvjcx.s[44]++;res.status(500).json({code:500,message:'Internal server error'});});});// router.delete('/:id', jsonParser, (req, res) => {
//   console.log("delete user from database");
//   const id = req.params.id;
//   User.findByIdAndRemove(req.params.id).then(() => {
//     res.sendStatus(204);
//   });
// });
cov_2j1zqtvjcx.s[45]++;router.get('/',(req,res)=>{cov_2j1zqtvjcx.f[10]++;cov_2j1zqtvjcx.s[46]++;return User.find().then(users=>{cov_2j1zqtvjcx.f[11]++;cov_2j1zqtvjcx.s[47]++;return res.json(users.map(user=>{cov_2j1zqtvjcx.f[12]++;cov_2j1zqtvjcx.s[48]++;return user.apiRepr();}));}).catch(err=>{cov_2j1zqtvjcx.f[13]++;cov_2j1zqtvjcx.s[49]++;return res.status(500).json({message:'Internal server error'});});});cov_2j1zqtvjcx.s[50]++;module.exports={router};